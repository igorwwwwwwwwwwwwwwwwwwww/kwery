#!/usr/bin/env ruby

$: << 'lib'

require 'kwery'

schema = Kwery::Schema.new
schema.create_table(:users)

importer = Kwery::Importer.new(schema)
importer.load(:users, 'data/users.csv', { id: :integer, active: :boolean })

schema.create_index(:users, :users_idx_id, [
  Kwery::Index::IndexedExpr.new(Kwery::Expr::Column.new(:id), :asc),
])

sql = ARGV.shift

unless sql
  puts 'Usage:'
  puts '  bin/kwery <sql>'
  exit 1
end

options = {}
options[:notablescan] = true if ENV['NOTABLESCAN'] == 'true'

parser = Kwery::Parser.new(options)
query = parser.parse(sql, ENV['DEBUG_PARSER'] == 'true')

plan = query.plan(schema)

context = Kwery::Executor::Context.new(schema)
plan.call(context).each do |tup|
  if tup[:_pretty]
    tup.delete(:_pretty)
    pp tup
  else
    puts tup
  end
end

if ENV['DEBUG_STATS'] == 'true'
  puts
  puts "stats: #{context.stats}"
end
